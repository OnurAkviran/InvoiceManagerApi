// <auto-generated />
using System;
using InvoiceManagerApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvoiceManagerApi.Migrations
{
    [DbContext(typeof(InvoiceManagerContext))]
    [Migration("20250702181551_AddUserRefreshToken")]
    partial class AddUserRefreshToken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BankAccountNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BankName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CountryRegionCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("FaxNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Gln")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("HomePage")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("IBAN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RegistrationNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("SystemCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SystemUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VatRegistrationNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountryRegionCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("FaxNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Gln")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("HomePage")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("NoOfInvoices")
                        .HasColumnType("int");

                    b.Property<int?>("NoOfOrders")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RegistrationNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("SystemCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SystemUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VatRegistrationNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CustomerId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("GrossWeightBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("NetWeightBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyOnPurchaseOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyOnSalesOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SystemCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SystemUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitOfMeasureCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("UnitOfMeasureId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ItemId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.ItemUnitOfMeasure", b =>
                {
                    b.Property<int>("ItemUnitOfMeasureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemUnitOfMeasureId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("QtyPerUnitOfMeasure")
                        .HasColumnType("int");

                    b.Property<DateTime>("SystemCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SystemUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("int");

                    b.HasKey("ItemUnitOfMeasureId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ItemId");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("ItemsUnitOfMeasures");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.UnitOfMeasure", b =>
                {
                    b.Property<int>("UnitOfMeasureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitOfMeasureId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("SystemCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SystemUpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UnitOfMeasureId");

                    b.HasIndex("CompanyId");

                    b.ToTable("UnitOfMeasures");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SystemCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SystemUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountryRegionCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("FaxNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Gln")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("HomePage")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NoOfInvoices")
                        .HasColumnType("int");

                    b.Property<int>("NoOfOrders")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RegistrationNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("SystemCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SystemUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VatRegistrationNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("VendorId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Purchase.PurchaseHeader", b =>
                {
                    b.Property<int>("PurchaseHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseHeaderId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateOnly>("DocumentDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("PostingDate")
                        .HasColumnType("date");

                    b.Property<string>("PostingDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SystemCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SystemUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorCity")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PurchaseHeaderId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("VendorId");

                    b.ToTable("PurchaseHeaders");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Purchase.PurchaseInvoiceHeader", b =>
                {
                    b.Property<int>("PurchaseInvoiceHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseInvoiceHeaderId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateOnly>("DocumentDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("PostingDate")
                        .HasColumnType("date");

                    b.Property<string>("PostingDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PurchaseHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SystemCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SystemUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorCity")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PurchaseInvoiceHeaderId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PurchaseHeaderId");

                    b.HasIndex("VendorId");

                    b.ToTable("PurchaseInvoiceHeaders");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Purchase.PurchaseInvoiceLine", b =>
                {
                    b.Property<int>("PurchaseInvoiceLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseInvoiceLineId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitOfMeasureId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LineGrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LineNetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LineNo")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseInvoiceHeaderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantityBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SystemCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SystemUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitOfMeasureCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PurchaseInvoiceLineId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ItemUnitOfMeasureId");

                    b.HasIndex("PurchaseInvoiceHeaderId");

                    b.ToTable("PurchaseInvoiceLines");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Purchase.PurchaseLine", b =>
                {
                    b.Property<int>("PurchaseLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseLineId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitOfMeasureId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LineGrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LineNetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LineNo")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseHeaderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantityBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SystemCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SystemUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitOfMeasureCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PurchaseLineId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ItemUnitOfMeasureId");

                    b.HasIndex("PurchaseHeaderId");

                    b.ToTable("PurchaseLines");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Sales.SalesHeader", b =>
                {
                    b.Property<int>("SalesHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesHeaderId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerCity")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("DocumentDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("PostingDate")
                        .HasColumnType("date");

                    b.Property<string>("PostingDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SystemCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SystemUpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("SalesHeaderId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustomerId");

                    b.ToTable("SalesHeaders");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Sales.SalesInvoiceHeader", b =>
                {
                    b.Property<int>("SalesInvoiceHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesInvoiceHeaderId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerCity")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("DocumentDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("PostingDate")
                        .HasColumnType("date");

                    b.Property<string>("PostingDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SalesHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SystemCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SystemUpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("SalesInvoiceHeaderId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SalesHeaderId");

                    b.ToTable("SalesInvoiceHeaders");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Sales.SalesInvoiceLine", b =>
                {
                    b.Property<int>("SalesInvoiceLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesInvoiceLineId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitOfMeasureId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LineGrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LineNetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LineNo")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantityBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SalesInvoiceHeaderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SystemCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SystemUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitOfMeasureCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SalesInvoiceLineId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ItemUnitOfMeasureId");

                    b.HasIndex("SalesInvoiceHeaderId");

                    b.ToTable("SalesInvoiceLines");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Sales.SalesLine", b =>
                {
                    b.Property<int>("SalesLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesLineId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUnitOfMeasureId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LineGrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LineNetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LineNo")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantityBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SalesHeaderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SystemCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SystemUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitOfMeasureCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SalesLineId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ItemUnitOfMeasureId");

                    b.HasIndex("SalesHeaderId");

                    b.ToTable("SalesLines");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.Customer", b =>
                {
                    b.HasOne("InvoiceManagerApi.Models.BaseData.Company", "Company")
                        .WithMany("Customers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.Item", b =>
                {
                    b.HasOne("InvoiceManagerApi.Models.BaseData.Company", "Company")
                        .WithMany("Items")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.ItemUnitOfMeasure", b =>
                {
                    b.HasOne("InvoiceManagerApi.Models.BaseData.Company", "Company")
                        .WithMany("ItemUnitOfMeasures")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceManagerApi.Models.BaseData.Item", "Item")
                        .WithMany("UnitOfMeasure")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceManagerApi.Models.BaseData.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany("ItemUnitOfMeasures")
                        .HasForeignKey("UnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Item");

                    b.Navigation("UnitOfMeasure");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.UnitOfMeasure", b =>
                {
                    b.HasOne("InvoiceManagerApi.Models.BaseData.Company", "Company")
                        .WithMany("UnitOfMeasures")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.User", b =>
                {
                    b.HasOne("InvoiceManagerApi.Models.BaseData.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Company");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.Vendor", b =>
                {
                    b.HasOne("InvoiceManagerApi.Models.BaseData.Company", "Company")
                        .WithMany("Vendors")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Purchase.PurchaseHeader", b =>
                {
                    b.HasOne("InvoiceManagerApi.Models.BaseData.Company", "Company")
                        .WithMany("PurchaseHeaders")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceManagerApi.Models.BaseData.Vendor", "Vendor")
                        .WithMany("PurchaseHeaders")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Purchase.PurchaseInvoiceHeader", b =>
                {
                    b.HasOne("InvoiceManagerApi.Models.BaseData.Company", "Company")
                        .WithMany("PurchaseInvoiceHeaders")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceManagerApi.Models.Purchase.PurchaseHeader", "PurchaseHeader")
                        .WithMany()
                        .HasForeignKey("PurchaseHeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceManagerApi.Models.BaseData.Vendor", "Vendor")
                        .WithMany("PurchaseInvoiceHeaders")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("PurchaseHeader");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Purchase.PurchaseInvoiceLine", b =>
                {
                    b.HasOne("InvoiceManagerApi.Models.BaseData.Item", "Item")
                        .WithMany("PurchaseInvoiceLines")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceManagerApi.Models.BaseData.ItemUnitOfMeasure", "ItemUnitOfMeasure")
                        .WithMany("PurchaseInvoiceLines")
                        .HasForeignKey("ItemUnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InvoiceManagerApi.Models.Purchase.PurchaseInvoiceHeader", "PurchaseInvoiceHeader")
                        .WithMany("PurchaseInvoiceLines")
                        .HasForeignKey("PurchaseInvoiceHeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ItemUnitOfMeasure");

                    b.Navigation("PurchaseInvoiceHeader");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Purchase.PurchaseLine", b =>
                {
                    b.HasOne("InvoiceManagerApi.Models.BaseData.Item", "Item")
                        .WithMany("PurchaseLines")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceManagerApi.Models.BaseData.ItemUnitOfMeasure", "ItemUnitOfMeasure")
                        .WithMany("PurchaseLines")
                        .HasForeignKey("ItemUnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InvoiceManagerApi.Models.Purchase.PurchaseHeader", "PurchaseHeader")
                        .WithMany("PurchaseLines")
                        .HasForeignKey("PurchaseHeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ItemUnitOfMeasure");

                    b.Navigation("PurchaseHeader");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Sales.SalesHeader", b =>
                {
                    b.HasOne("InvoiceManagerApi.Models.BaseData.Company", "Company")
                        .WithMany("SalesHeaders")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceManagerApi.Models.BaseData.Customer", "Customer")
                        .WithMany("SalesHeaders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Sales.SalesInvoiceHeader", b =>
                {
                    b.HasOne("InvoiceManagerApi.Models.BaseData.Company", "Company")
                        .WithMany("SalesInvoiceHeaders")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceManagerApi.Models.BaseData.Customer", "Customer")
                        .WithMany("SalesInvoiceHeaders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceManagerApi.Models.Sales.SalesHeader", "SalesHeader")
                        .WithMany()
                        .HasForeignKey("SalesHeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Customer");

                    b.Navigation("SalesHeader");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Sales.SalesInvoiceLine", b =>
                {
                    b.HasOne("InvoiceManagerApi.Models.BaseData.Item", "Item")
                        .WithMany("SalesInvoiceLines")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceManagerApi.Models.BaseData.ItemUnitOfMeasure", "ItemUnitOfMeasure")
                        .WithMany("SalesInvoiceLines")
                        .HasForeignKey("ItemUnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InvoiceManagerApi.Models.Sales.SalesInvoiceHeader", "SalesInvoiceHeader")
                        .WithMany("SalesInvoiceLines")
                        .HasForeignKey("SalesInvoiceHeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ItemUnitOfMeasure");

                    b.Navigation("SalesInvoiceHeader");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Sales.SalesLine", b =>
                {
                    b.HasOne("InvoiceManagerApi.Models.BaseData.Item", "Item")
                        .WithMany("SalesLines")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceManagerApi.Models.BaseData.ItemUnitOfMeasure", "ItemUnitOfMeasure")
                        .WithMany("SalesLines")
                        .HasForeignKey("ItemUnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InvoiceManagerApi.Models.Sales.SalesHeader", "SalesHeader")
                        .WithMany("SalesLines")
                        .HasForeignKey("SalesHeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ItemUnitOfMeasure");

                    b.Navigation("SalesHeader");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.Company", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("ItemUnitOfMeasures");

                    b.Navigation("Items");

                    b.Navigation("PurchaseHeaders");

                    b.Navigation("PurchaseInvoiceHeaders");

                    b.Navigation("SalesHeaders");

                    b.Navigation("SalesInvoiceHeaders");

                    b.Navigation("UnitOfMeasures");

                    b.Navigation("Users");

                    b.Navigation("Vendors");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.Customer", b =>
                {
                    b.Navigation("SalesHeaders");

                    b.Navigation("SalesInvoiceHeaders");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.Item", b =>
                {
                    b.Navigation("PurchaseInvoiceLines");

                    b.Navigation("PurchaseLines");

                    b.Navigation("SalesInvoiceLines");

                    b.Navigation("SalesLines");

                    b.Navigation("UnitOfMeasure");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.ItemUnitOfMeasure", b =>
                {
                    b.Navigation("PurchaseInvoiceLines");

                    b.Navigation("PurchaseLines");

                    b.Navigation("SalesInvoiceLines");

                    b.Navigation("SalesLines");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.UnitOfMeasure", b =>
                {
                    b.Navigation("ItemUnitOfMeasures");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.BaseData.Vendor", b =>
                {
                    b.Navigation("PurchaseHeaders");

                    b.Navigation("PurchaseInvoiceHeaders");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Purchase.PurchaseHeader", b =>
                {
                    b.Navigation("PurchaseLines");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Purchase.PurchaseInvoiceHeader", b =>
                {
                    b.Navigation("PurchaseInvoiceLines");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Sales.SalesHeader", b =>
                {
                    b.Navigation("SalesLines");
                });

            modelBuilder.Entity("InvoiceManagerApi.Models.Sales.SalesInvoiceHeader", b =>
                {
                    b.Navigation("SalesInvoiceLines");
                });
#pragma warning restore 612, 618
        }
    }
}
